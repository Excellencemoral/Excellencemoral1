{"version":3,"file":"template_polyfill.js","sourceRoot":"","sources":["../src/polyfills/template_polyfill.ts"],"names":[],"mappings":";AAAA,IAAI,OAAO,mBAAmB,KAAK,WAAW,EAAE;IAC9C,MAAM,qBAAqB,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;IAC/D,qDAAqD;IACrD,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IAC1E,4DAA4D;IAC5D,iCAAiC;IACjC,SAAS;IACT,MAAM;IACN,IAAI;IACJ,kDAAkD;IAClD,iCAAiC;IACjC,QAAQ;IACR,IAAI;IACJ,yDAAyD;IAEzD,MAAM,6BAA6B,GAAQ,cAAY,CAAC,CAAC;IACzD;;OAEG;IACH,6BAA6B,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CACrD,WAAW,CAAC,SAAS,CACtB,CAAC;IAEF,MAAM,eAAe,GAAG,yBAAyB,GAAQ;QACvD,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,WAAW,EAAE;YACtC,GAAG,EAAE,UAAS,IAAI;gBAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACjC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;oBAC9B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBACnD;gBACD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;gBAC7B,OAAO,IAAI,CAAC,UAAU,EAAE;oBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtC;YACH,CAAC;YACD,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,eAAe,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC;IAEzD,6BAA6B,CAAC,QAAQ,GAAG,UAAS,QAAa;QAC7D,sEAAsE;QACtE,IACE,QAAQ,CAAC,OAAO;YAChB,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,eAAe,CAAC,YAAY,EAC/D;YACA,OAAO;SACR;QACD,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACvD,IAAI,KAAK,CAAC;QACV,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE;YACpC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACrC;QACD,QAAQ,CAAC,SAAS,GAAG,6BAA6B,CAAC,SAAS,CAAC;IAC/D,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG;QACjC,IAAI,EAAE,GAAG,qBAAqB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACtD,IAAI,EAAE,CAAC,SAAS,KAAK,UAAU,EAAE;YAC/B,EAAE,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAClD,6BAA6B,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC5C;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;IAED,MAAc,CAAC,mBAAmB,GAAG,6BAA6B,CAAC;CACrE","sourcesContent":["if (typeof HTMLTemplateElement === 'undefined') {\n  const capturedCreateElement = Document.prototype.createElement;\n  //const capturedCloneNode = Node.prototype.cloneNode;\n  const contentDoc = document.implementation.createHTMLDocument('template');\n  //const contentDoc = document.implementation.createDocument(\n  //'http://www.w3.org/1999/xhtml',\n  //'html',\n  //null\n  //);\n  //const contentDocBody = document.createElementNS(\n  //'http://www.w3.org/1999/xhtml',\n  //'body'\n  //);\n  //contentDoc.documentElement.appendChild(contentDocBody);\n\n  const PolyfilledHTMLTemplateElement: any = function() {};\n  /**\n   * Provides a minimal shim for the <template> element.\n   */\n  PolyfilledHTMLTemplateElement.prototype = Object.create(\n    HTMLElement.prototype\n  );\n\n  const defineInnerHTML = function defineInnerHTML(obj: any) {\n    Object.defineProperty(obj, 'innerHTML', {\n      set: function(text) {\n        console.log(text);\n        contentDoc.body.innerHTML = text;\n        while (this.content.firstChild) {\n          this.content.removeChild(this.content.firstChild);\n        }\n        const body = contentDoc.body;\n        while (body.firstChild) {\n          this.content.append(body.firstChild);\n        }\n      },\n      configurable: true\n    });\n  };\n\n  defineInnerHTML(PolyfilledHTMLTemplateElement.prototype);\n\n  PolyfilledHTMLTemplateElement.decorate = function(template: any) {\n    // if the template is decorated or not in HTML namespace, return fast.\n    if (\n      template.content ||\n      template.namespaceURI !== document.documentElement.namespaceURI\n    ) {\n      return;\n    }\n    template.content = contentDoc.createDocumentFragment();\n    let child;\n    while ((child = template.firstChild)) {\n      template.content.appendChild(child);\n    }\n    template.__proto__ = PolyfilledHTMLTemplateElement.prototype;\n  };\n\n  Document.prototype.createElement = function createElement() {\n    let el = capturedCreateElement.apply(this, arguments);\n    if (el.localName === 'template') {\n      el = capturedCreateElement.call(this, 'template');\n      PolyfilledHTMLTemplateElement.decorate(el);\n    }\n    return el;\n  };\n\n  (window as any).HTMLTemplateElement = PolyfilledHTMLTemplateElement;\n}\n"]}