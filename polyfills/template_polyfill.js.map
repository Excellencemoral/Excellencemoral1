{"version":3,"file":"template_polyfill.js","sourceRoot":"","sources":["../src/polyfills/template_polyfill.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAE9C,IAAI,OAAO,mBAAmB,KAAK,WAAW,EAAE;IAC9C,MAAM,qBAAqB,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;IAC/D,MAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CACvD,8BAA8B,EAC9B,MAAM,EACN,IAAI,CACL,CAAC;IACF,MAAM,cAAc,GAAG,QAAQ,CAAC,eAAe,CAC7C,8BAA8B,EAC9B,MAAM,CACP,CAAC;IACF,UAAU,CAAC,eAAe,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAEvD,MAAM,6BAA6B,GAAQ,cAAY,CAAC,CAAC;IACzD;;OAEG;IACH,6BAA6B,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CACrD,WAAW,CAAC,SAAS,CACtB,CAAC;IAEF,6BAA6B,CAAC,QAAQ,GAAG,UAAS,QAAa;QAC7D,sEAAsE;QACtE,IACE,QAAQ,CAAC,OAAO;YAChB,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,eAAe,CAAC,YAAY,EAC/D;YACA,OAAO;SACR;QACD,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC,sBAAsB,EAAE,CAAC;QACvD,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QACrD,QAAQ,CAAC,SAAS,GAAG,6BAA6B,CAAC,SAAS,CAAC;IAC/D,CAAC,CAAC;IAEF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG;QACjC,MAAM,EAAE,GAAG,qBAAqB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,EAAE,CAAC,SAAS,KAAK,UAAU,EAAE;YAC/B,6BAA6B,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC5C;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;IAED,MAAc,CAAC,mBAAmB,GAAG,6BAA6B,CAAC;CACrE","sourcesContent":["import { reparentNodes } from '../lib/dom.js';\n\nif (typeof HTMLTemplateElement === 'undefined') {\n  const capturedCreateElement = Document.prototype.createElement;\n  const contentDoc = document.implementation.createDocument(\n    'http://www.w3.org/1999/xhtml',\n    'html',\n    null\n  );\n  const contentDocBody = document.createElementNS(\n    'http://www.w3.org/1999/xhtml',\n    'body'\n  );\n  contentDoc.documentElement.appendChild(contentDocBody);\n\n  const PolyfilledHTMLTemplateElement: any = function() {};\n  /**\n   * Provides a minimal shim for the <template> element.\n   */\n  PolyfilledHTMLTemplateElement.prototype = Object.create(\n    HTMLElement.prototype\n  );\n\n  PolyfilledHTMLTemplateElement.decorate = function(template: any) {\n    // if the template is decorated or not in HTML namespace, return fast.\n    if (\n      template.content ||\n      template.namespaceURI !== document.documentElement.namespaceURI\n    ) {\n      return;\n    }\n    template.content = contentDoc.createDocumentFragment();\n    reparentNodes(template.content, template.firstChild);\n    template.__proto__ = PolyfilledHTMLTemplateElement.prototype;\n  };\n\n  Document.prototype.createElement = function createElement() {\n    const el = capturedCreateElement.apply(this, arguments);\n    if (el.localName === 'template') {\n      PolyfilledHTMLTemplateElement.decorate(el);\n    }\n    return el;\n  };\n\n  (window as any).HTMLTemplateElement = PolyfilledHTMLTemplateElement;\n}\n"]}