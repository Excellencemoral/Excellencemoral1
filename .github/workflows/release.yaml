name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    # Prevents changesets action from creating a PR on forks
    if: github.repository == 'lit/lit'
    name: Release
    environment: Changesets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: npm ci

      # Changeset uses prettier@1 which creates unstable formatting issues
      # Deleting this forces fallback to our version of prettier
      # https://github.com/changesets/changesets/issues/616
      - name: Remove old version of prettier from changesets
        run: rm -rf node_modules/@changesets/write/node_modules/prettier

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@master
        with:
          version: npm run version
          publish: npm run release
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Checkout dist repo
        uses: actions/checkout@v2
        if: steps.changesets.outputs.published
        with:
          repository: lit/dist
          ref: empty
          path: dist
          token: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}

      - name: Push bundles to dist repo
        if: steps.changesets.outputs.published
        working-directory: dist
        run: |
          # Extract the version of `lit` that was published or the empty string.
          LIT_VERSION=$(npm run --silent extract-published-lit-version <<EOF
            ${{ steps.changesets.outputs.publishedPackages }}
          EOF
          )
          # Don't create a bundle commit if `lit` wasn't published.
          if [[ -z "$LIT_VERSION" ]]; then
            exit
          fi
          # Checkout the empty root commit (with tag `empty`).
          git checkout --detach empty
          # Copy in all of the bundles.
          cp ../packages/lit/lit.all.min.js .
          cp ../packages/lit/lit.all.min.js.map .
          cp ../packages/lit/lit.min.js .
          cp ../packages/lit/lit.min.js.map .
          # Stage the bundles, create the commit, tag it, and push.
          git add .
          git config user.name "Lit Robot"
          git config user.email "lit-robot@google.com"
          git commit -m "Bundles for lit@${LIT_VERSION}"
          git tag "v${LIT_VERSION}"
          git push origin "v${LIT_VERSION}"
