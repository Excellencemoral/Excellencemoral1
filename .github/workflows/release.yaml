name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    # Prevents changesets action from creating a PR on forks
    if: github.repository == 'lit/lit'
    name: Release
    environment: Changesets
    runs-on: ubuntu-latest
    steps:
      - name: Set Lit Robot's name and email in git
        run: |
          git config --global user.name "Lit Robot"
          git config --global user.email "lit-robot@google.com"

      - name: Setup Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Checkout Lit Repo
        uses: actions/checkout@v2
        with:
          path: lit
          # This makes Actions fetch all Git history so that Changesets can
          # generate changelogs with the correct commits
          fetch-depth: 0

      - name: Install Dependencies
        working-directory: lit
        run: npm ci

      # Changeset uses prettier@1 which creates unstable formatting issues
      # Deleting this forces fallback to our version of prettier
      # https://github.com/changesets/changesets/issues/616
      - name: Remove old version of prettier from changesets
        working-directory: lit
        run: rm -rf node_modules/@changesets/*/node_modules/prettier

      - name: Create Release Pull Request or Publish to npm
        working-directory: lit
        id: changesets
        uses: changesets/action@master
        with:
          version: npm run version
          publish: npm run release
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Checkout dist repo
        uses: actions/checkout@v2
        if: steps.changesets.outputs.published
        with:
          repository: lit/dist
          ref: empty
          path: dist
          token: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}

      - name: Push bundles to dist repo
        if: steps.changesets.outputs.published
        working-directory: dist
        run: |
          # Extract the version of `lit` that was published or the empty string.
          LIT_VERSION=$(npm run --silent extract-published-lit-version <<EOF
            ${{ steps.changesets.outputs.publishedPackages }}
          EOF
          )
          # Don't create a bundle commit if `lit` wasn't published.
          if [[ -z "$LIT_VERSION" ]]; then
            exit
          fi
          # Checkout the empty root commit (with tag `empty`).
          git checkout --detach empty
          # Copy in all of the bundles.
          mkdir all
          cp ../lit/packages/lit/lit.all.min.js all/lit-all.min.js
          cp ../lit/packages/lit/lit.all.min.js.map all/lit-all.min.js
          mkdir core
          cp ../lit/packages/lit/lit.min.js core/lit-core.min.js
          cp ../lit/packages/lit/lit.min.js.map core/lit-core.min.js
          # Stage the bundles, create the commit, tag it, and push.
          git add .
          git commit -m "Bundles for lit@${LIT_VERSION}"
          git tag "v${LIT_VERSION}"
          git push origin "v${LIT_VERSION}"

      - name: Checkout lit-element-starter-ts repo
        uses: actions/checkout@v2
        with:
          repository: lit/lit-element-starter-ts
          ref: main
          path: lit-element-starter-ts
          token: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}

      - name: Push changes to lit-element-starter-ts repo
        working-directory: lit-element-starter-ts
        run: |
          # Add the local Lit repo as a remote and fetch the currently checked
          # out commit.
          git remote add lit ../lit
          git fetch lit HEAD:lit-head
          IMPORT_REF=$(git rev-parse lit-head)
          # Read the contents of the TS starter kit directory from the imported
          # commit into the index root, ignoring any conflicts (`--reset`) and
          # updating the work tree too (`-u`).
          git read-tree --reset -u "$IMPORT_REF":packages/lit-starter-ts
          # If there are no changes, skip the rest of this step.
          git diff --quiet --exit-code && exit
          # Stage the changes, commit, and push.
          git add .
          git commit -m "Import upstream changes (${IMPORT_REF})"
          git push origin main

      - name: Checkout lit-element-starter-js repo
        uses: actions/checkout@v2
        with:
          repository: lit/lit-element-starter-js
          ref: main
          path: lit-element-starter-js
          token: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}

      - name: Push changes to lit-element-starter-js repo
        working-directory: lit-element-starter-js
        run: |
          # Add the local Lit repo as a remote and fetch the currently checked
          # out commit.
          git remote add lit ../lit
          git fetch lit HEAD:lit-head
          IMPORT_REF=$(git rev-parse lit-head)
          # Read the contents of the JS starter kit directory from the imported
          # commit into the index root, ignoring any conflicts (`--reset`) and
          # updating the work tree too (`-u`).
          git read-tree --reset -u "$IMPORT_REF":packages/lit-starter-js
          # If there are no changes, skip the rest of this step.
          git diff --quiet --exit-code && exit
          # Stage the changes, commit, and push.
          git add .
          git commit -m "Import upstream changes (${IMPORT_REF})"
          git push origin main
