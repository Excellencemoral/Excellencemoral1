name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    # Don't run on forks. We can and should only release from the main repo.
    if: github.repository == 'lit/lit'

    name: Release
    environment: Changesets
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Checkout Lit Repo
        uses: actions/checkout@v2
        with:
          path: lit
          # This makes Actions fetch all Git history so that Changesets can
          # generate changelogs with the correct commits
          fetch-depth: 0

      - name: Install Dependencies
        working-directory: lit
        run: npm ci

      # Changeset uses prettier@1 which creates unstable formatting issues
      # Deleting this forces fallback to our version of prettier
      # https://github.com/changesets/changesets/issues/616
      - name: Remove old version of prettier from changesets
        working-directory: lit
        run: rm -rf node_modules/@changesets/*/node_modules/prettier

      - name: Create Release Pull Request or Publish to npm
        working-directory: lit
        # The id of this step must not be "changesets", or else the step will be invisible
        # in the list of steps from the GitHub UI when the action runs (though it will still
        # run, and its output will appear in the raw logs). Unknown why this is the case,
        # see https://github.com/changesets/action/issues/149 for discussion.
        id: cs
        uses: changesets/action@v1
        with:
          version: npm run version
          publish: npm run release
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Checkout dist repo
        uses: actions/checkout@v2
        # GitHub Actions outputs are strings and the string 'false' converts to
        # `true` because it isn't the empty string.
        if: steps.cs.outputs.published == 'true'
        with:
          repository: lit/dist
          ref: empty
          path: dist
          token: ${{ secrets.LIT_ROBOT_AUTOMATION_PAT }}

      - name: Push bundles to dist repo
        # GitHub Actions outputs are strings and the string 'false' converts to
        # `true` because it isn't the empty string.
        if: steps.cs.outputs.published == 'true'
        working-directory: dist
        run: |
          # Extract the version of `lit` that was published or the empty string.
          LIT_VERSION=$(npm run --silent extract-published-lit-version <<EOF
            ${{ steps.cs.outputs.publishedPackages }}
          EOF
          )
          # Don't create a bundle commit if `lit` wasn't published.
          if [[ -z "$LIT_VERSION" ]]; then
            exit
          fi
          # Checkout the empty root commit (with tag `empty`).
          git checkout --detach empty
          # Copy in all of the bundles.
          mkdir all
          cp ../lit/packages/lit/lit-all.min.js all
          cp ../lit/packages/lit/lit-all.min.js.map all
          mkdir core
          cp ../lit/packages/lit/lit-core.min.js core
          cp ../lit/packages/lit/lit-core.min.js.map core
          # Stage the bundles, create the commit, tag it, and push.
          git add .
          git config user.name "Lit Robot"
          git config user.email "lit-robot@google.com"
          git commit -m "Bundles for lit@${LIT_VERSION}"
          git tag "v${LIT_VERSION}"
          git push origin "v${LIT_VERSION}"
