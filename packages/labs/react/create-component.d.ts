/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import * as ReactModule from 'react';
declare type Events<S> = {
  [P in keyof S]?: (e: Event) => unknown;
};
declare type StringValued<T> = {
  [P in keyof T]: string;
};
declare type Constructor<T> = {
  new (): T;
};
/**
 * Creates a React component for a custom element. Properties are distinguished
 * from attributes automatically, and events can be configured so they are
 * added to the custom element as event listeners.
 *
 * @param React The React module, typically imported from the `react` npm
 * package.
 * @param tagName The custom element tag name registered via
 * `customElements.define`.
 * @param elementClass The custom element class registered via
 * `customElements.define`.
 * @param events An object listing events to which the component can listen. The
 * object keys are the event property names passed in via React props and the
 * object values are the names of the corresponding events generated by the
 * custom element. For example, given `{onactivate: 'activate'}` an event
 * function may be passed via the component's `onactivate` prop and will be
 * called when the custom element fires its `activate` event.
 */
export declare const createComponent: <I extends HTMLElement, E>(
  React: typeof ReactModule,
  tagName: string,
  elementClass: Constructor<I>,
  events?: StringValued<E> | undefined
) => ReactModule.ForwardRefExoticComponent<
  ReactModule.PropsWithRef<Partial<I> & Events<E>> & {
    children?: ReactModule.ReactNode;
  } & ReactModule.RefAttributes<unknown>
>;
export {};
//# sourceMappingURL=create-component.d.ts.map
